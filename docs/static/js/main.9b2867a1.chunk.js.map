{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","handleInputChange","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifts","contain","image","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAgB1C,OACC,sBAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKf,SACC,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,IAlBY,SAACA,GAC1BF,EAAcE,EAAEQ,OAAOF,OAkBpBG,CAAkBT,S,+BCPRU,EAlBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTC,EADS,iDACuCC,UACrDH,GAFc,+DAIQI,MAAMF,GAJd,cAITG,EAJS,gBAKQA,EAASC,OALjB,uBAKPC,EALO,EAKPA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACtB,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXpB,kBAeRM,GAfQ,4CAAH,sDCWEO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC7B,OACC,sBAAKc,UAAU,6CAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCqBQO,EAtBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFL,SAACA,GAAc,IAAD,EAChBf,mBAAS,CAClCsB,KAAM,GACNa,SAAS,IAHgC,mBACnCC,EADmC,KAC5BC,EAD4B,KAiB1C,OAXAC,qBAAU,WACTxB,EAAQC,GAAUwB,MAAK,SAACC,GACvBC,YAAW,WACVJ,EAAS,CACRf,KAAMkB,EACNL,SAAS,MAER,WAEF,CAACpB,IAEGqB,EDd2BM,CAAc3B,GAAlCa,EADmB,EACzBN,KAAca,EADW,EACXA,QAElBQ,EAAU,GAQd,OALCA,EADqB,IAAlBf,EAAOrB,SAA4B,IAAZ4B,EAChB,mDAEAP,EAAOJ,KAAI,SAACoB,GAAD,OAAW,cAAC,EAAD,eAAgCA,GAAdA,EAAMlB,OAIxD,qCACC,oBAAIK,UAAU,qCAAd,SAAoDhB,IACpD,uBACCoB,GAAW,2CACZ,qBAAKJ,UAAU,YAAf,SAA4BY,IAC5B,2BEWYE,EA7BO,WAAM,MAGS7C,mBAAS,CAAC,aAHnB,mBAGpB8C,EAHoB,KAGR/C,EAHQ,KAU3B,OACC,qCACC,+CACA,uBAGA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,8BACE+C,EAAWtB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,YClBnBgC,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.9b2867a1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CategoryAdd = ({ setCategories }) => {\n\tconst [inputValue, setInputValue] = useState(\"\");\n\n\tconst handleInputChange = (e) => {\n\t\tsetInputValue(e.target.value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (inputValue.trim().length > 2) {\n\t\t\tsetCategories((cats) => [inputValue, ...cats]);\n\t\t\tsetInputValue(\"\");\n\t\t}\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\thandleInputChange(e);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</form>\n\t);\n};\n\nCategoryAdd.propTypes = {\n\tsetCategories: PropTypes.func.isRequired,\n};\n\nexport default CategoryAdd;\n","const getGifs = async (category) => {\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n\t\tcategory\n\t)}&limit=10&api_key=JovF2DHbAZ8TVmnGgZuwEYArgFHq5At9`;\n\tconst response = await fetch(url);\n\tconst { data } = await response.json();\n\n\tconst gifs = data.map((img) => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\ttitle: img.title,\n\t\t\turl: img.images.downsized_medium.url,\n\t\t};\n\t});\n\n\treturn gifs;\n};\n\nexport default getGifs;\n","import React from \"react\";\n\nconst GifGridItem = ({ title, url }) => {\n\treturn (\n\t\t<div className=\"card animate__animated animate__rubberBand\">\n\t\t\t<img src={url} alt={title} />\n\t\t\t<p>{title}</p>\n\t\t</div>\n\t);\n};\n\nexport default GifGridItem;\n","//import React, { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { useFetchGifts } from \"../hooks/useFetchGifts\";\nimport GifGridItem from \"./GifGridItem\";\n\nconst GifGrid = ({ category }) => {\n\tconst { data: images, loading } = useFetchGifts(category);\n\n\tlet contain = [];\n\n\tif (images.length === 0 && loading === false) {\n\t\tcontain = <p>Category not found</p>;\n\t} else {\n\t\tcontain = images.map((image) => <GifGridItem key={image.id} {...image} />);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className=\"animate__animated animate__flipInX\">{category}</h3>\n\t\t\t<hr />\n\t\t\t{loading && <p>Loading...</p>}\n\t\t\t<div className=\"card-grid\">{contain}</div>\n\t\t\t<hr />\n\t\t</>\n\t);\n};\n\nexport default GifGrid;\n","import { useEffect, useState } from \"react\";\nimport getGifs from \"../helpers/getGifs\";\n\nexport const useFetchGifts = (category) => {\n\tconst [state, setState] = useState({\n\t\tdata: [],\n\t\tloading: true,\n\t});\n\n\tuseEffect(() => {\n\t\tgetGifs(category).then((imgs) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetState({\n\t\t\t\t\tdata: imgs,\n\t\t\t\t\tloading: false,\n\t\t\t\t});\n\t\t\t}, 2500);\n\t\t});\n\t}, [category]);\n\n\treturn state;\n};\n","import React, { useState } from \"react\";\nimport CategoryAdd from \"./components/CategoryAdd\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GiftExpertApp = () => {\n\t//const categories = [\"one punch\", \"Samurai X\", \"Dragon Ball\"]\n\n\tconst [categories, setCategories] = useState([\"Konosuba\"]);\n\n\t/* const handleAdd = () => {\n\t\t//setCategories([...categories, \"Konosuba\"]);\n\t\tsetCategories((cats) => [...categories, \"Konosuba\"]);\n\t}; */\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GiftExpertApp</h2>\n\t\t\t<hr />\n\t\t\t{/* <button onClick={handleAdd}>Click me</button> */}\n\n\t\t\t<CategoryAdd setCategories={setCategories} />\n\n\t\t\t<div>\n\t\t\t\t{categories.map((category) => (\n\t\t\t\t\t<GifGrid key={category} category={category} />\n\t\t\t\t\t//<li key={category}>{category}</li>\n\t\t\t\t\t\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default GiftExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GiftExpertApp from \"./GiftExpertApp\";\nimport \"animate.css\";\nimport \"./index.css\";\n\nReactDOM.render(<GiftExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}